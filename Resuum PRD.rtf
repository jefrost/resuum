{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red16\green16\blue16;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c7843\c7843\c7451;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Resuum MVP - Product Requirements Document\
\
## Executive Summary\
\
Resuum is a browser-based resume optimization tool that helps job seekers efficiently select the best bullet points for each application. Users maintain a personal database of bullet points from past experiences and get AI-powered recommendations tailored to specific job descriptions.\
\
**Target Users:** Consultants, MBA students, and professionals with diverse project experience who apply to multiple roles requiring different skill emphasis.\
\
**Core Value Proposition:** Transform resume customization from a 30-minute manual process to a 2-minute AI-assisted workflow.\
\
---\
\
## Problem Statement\
\
### Primary Personas\
\
**Consultant Clara:**\
- Has 200+ bullet point variants across years of projects in messy Excel sheets\
- Spends significant time context-switching between ChatGPT and spreadsheets\
- Needs to surface the best candidates instantly for any job description\
- Wants to respect per-role limits and avoid overweighting single projects\
\
**MBA Mary:**\
- Applies to different functions (BizOps, BizDev, StratOps, PMM) requiring different framing\
- Risks accidentally including repetitive bullet points in the same resume\
- Needs function-specific bullet point selection with anti-redundancy enforcement\
\
### Jobs to be Done\
1. **When applying to a job**, curate the strongest set of bullet points to submit the best resume possible\
2. **When applying to multiple jobs**, construct resumes quickly for efficiency\
3. **When wordsmithing resumes**, start with the best version to minimize additional changes\
4. **When drafting resumes**, review all past bullet point variants without wasting time rewriting\
5. **When getting suggestions**, receive the best points from each project without redundancy\
\
---\
\
## Product Overview\
\
### Core Features\
- **Bullet Point Database**: Store and organize resume bullet points with project/role tagging\
- **AI-Powered Matching**: Embedding-only by default; ranks projects first, then picks the best bullet from each shortlisted project\
- **Smart Selection**: Anti-redundancy algorithm ensuring diverse, non-overlapping bullet points\
- **Role-Based Limits**: Respect user-defined bullet point limits per role/experience\
- **Quality Scoring**: Prioritize quantified, action-verb-rich bullet points\
\
### Technical Architecture\
- **Frontend**: Single HTML file with embedded JavaScript/CSS\
- **Storage**: Browser IndexedDB for local-first data persistence\
- **AI Integration**: BYO OpenAI API key; one embedding call per JD. Optional deep analysis can be toggled\
- **Hosting**: GitHub Pages (stable origin). Downloadable HTML as fallback\
- **Data Portability**: JSON export/import functionality\
\
---\
\
## Detailed Requirements\
\
### 1. Data Models\
\
#### Roles Table\
```javascript\
\{\
  id: string,\
  title: string,           // "Senior Consultant"\
  company: string,         // "McKinsey"\
  orderIndex: number,      // 0 = most recent\
  bulletsLimit: number,    // max bullets to show for this role\
  startDate: string,       // "2022-01"\
  endDate: string          // "2024-03" or null if current\
\}\
```\
\
#### Projects Table\
```javascript\
\{\
  id: string,\
  roleId: string,          // foreign key to roles\
  name: string,            // "Global Telecom Transformation"\
  description: string,     // optional user-added context\
  centroidVector: ArrayBuffer, // mean of bullet embeddings; updated locally when bullets change\
  bulletCount: number,     // number of bullets in this project\
  createdAt: number,       // timestamp\
  updatedAt: number        // timestamp\
\}\
```\
\
#### Bullets Table\
```javascript\
\{\
  id: string,\
  roleId: string,          // foreign key to roles\
  projectId: string,       // foreign key to projects (optional)\
  text: string,            // the actual bullet point text\
  source: string,          // "manual" | "resume_import"\
  normalizedFingerprint: string, // lowercase/strip punctuation/mask numbers for deduplication\
  features: \{              // local quality flags\
    hasNumbers: boolean,   // contains quantified results\
    actionVerb: boolean,   // starts with strong action verb\
    lengthOk: boolean      // appropriate length (5-22 words)\
  \},\
  createdAt: number,       // timestamp\
  lastModified: number     // timestamp\
\}\
```\
\
#### Embeddings Table\
```javascript\
\{\
  bulletId: string,        // foreign key to bullets\
  vector: ArrayBuffer,     // store as ArrayBuffer in IndexedDB\
  vendor: string,          // "openai"\
  model: string,           // "text-embedding-3-small" (internal only)\
  dims: number,            // vector dimensions\
  createdAt: number        // timestamp\
\}\
```\
\
#### Settings Table\
```javascript\
\{\
  openaiApiKey: string,    // stored locally; test & forget; never exported\
  maxPerProject: number,   // default 1 (hard rule for v1)\
  lastExportDate: number   // timestamp\
\}\
```\
\
### 2. User Interface Specification\
\
#### Navigation Structure\
- **Three main tabs**: New Application | Experience | Settings\
- **Clean, minimal design** with clear visual hierarchy\
- **Mobile-responsive** but optimized for desktop use\
\
#### Experience Tab\
**Sub-tabs**: Bullet Points | Projects\
\
**Bullet Points Table:**\
- Columns: Role | Project | Bullet Text | Quality Features | Created\
- **Sortable** by role (chronological), project, created date\
- **Filterable** by role, project, or text search\
- **Inline editing** for project assignment via dropdown\
- **Bulk actions**: Delete selected, assign to project, export selected\
- **Add new bullet** button with modal form\
\
**Projects Table:**\
- Columns: Role | Project Name | # Bullets | Actions\
- **Expandable rows** showing associated bullet points\
- **Edit project** modal for name, description updates\
- **Delete project** (reassigns bullets to "No Project")\
\
#### New Application Tab\
**Layout:**\
```\
[Job Title Input Field]\
[Job Description Textarea (large)]\
[Function Bias Dropdown: General | Technical | Business Strategy | Marketing | Operations]\
[Generate Recommendations Button]\
\
--- Results Section (appears after generation) ---\
[Processing Status: "Analyzing job description..." \uc0\u8594  "Ranking projects..." \u8594  "Complete!"]\
\
[Overall Summary Box]\
"Selected X bullet points across Y projects. Processing time: 2.1s"\
\
[Per-Role Results]\
Role: Senior Consultant (McKinsey) - 3 bullet points selected\
Projects considered: Global Telecom, Healthcare M&A, Retail Strategy\
\
\'95 [Bullet point 1] (Relevance: 94%, Project: Global Telecom)\
\'95 [Bullet point 2] (Relevance: 89%, Project: Healthcare M&A)  \
\'95 [Bullet point 3] (Relevance: 87%, Project: Retail Strategy)\
\
[Copy All Button] [Export to Plain Text Button]\
\
[Collapsible "Show Analysis" Section - Optional Deep Analysis]\
Focus Summary: Emphasized quantitative analysis, client management, strategic planning\
\uc0\u9989  Strong coverage of required skills: data analysis, client management\
\uc0\u9888 \u65039   Missing emphasis on: project management, team leadership  \
\uc0\u55357 \u56481  Consider: More quantified results in consulting bullets\
\uc0\u55357 \u56580  Verb diversity: Good mix of "Led", "Developed", "Analyzed"\
```\
\
#### Settings Tab\
**Sections:**\
\
**Role Management:**\
- **Drag-and-drop ordering** (most recent first)\
- **Edit role details**: title, company, dates, bullet limit\
- **Add new role** button\
\
**AI Configuration:**\
- **OpenAI API Key**: Your OpenAI API key is stored locally in your browser. "Test Connection" and "Forget Key" buttons available. Key never exported.\
\
**Data Management:**\
- **Export all data**: Download JSON file (API key not included)\
- **Import data**: Upload JSON file with merge options\
- **Clear all data**: With confirmation dialog\
- **Storage usage**: Show IndexedDB size and bullet/project counts\
\
### 3. AI Processing Pipeline\
\
#### Generation Algorithm (Project-First Approach)\
\
**Default Fast Path (Embedding-Only, No GPT Skills Extraction):**\
\
**Phase 1: Job Analysis**\
1. Extract job title and description text\
2. Generate embedding for combined job content (1 API call)\
3. (Optional, deep mode) Extract key requirements with GPT \uc0\u8594  used only for coverage explanation\
4. Apply function bias by nudging weights (no extra API calls)\
\
**Phase 2: Project Ranking**\
1. Calculate project scores using centroid vectors:\
   ```javascript\
   projectScore = \uc0\u945  \'d7 cosine_similarity(jd_embedding, project_centroid) + \
                  \uc0\u961  \'d7 recency_factor(role)\
   ```\
2. Shortlist top M projects per role:\
   ```javascript\
   M = Math.min(availableProjects, Math.max(3, Math.min(8, 2 \'d7 roleLimit)))\
   ```\
\
**Phase 3: Shortlist & Selection (Per Role)**\
1. **Shortlist projects**: M = clamp(3, 8, 2\'d7roleLimit)\
2. **For each shortlisted project**, pick best bullet:\
   ```javascript\
   bulletScore = \uc0\u945  \'d7 cosine_similarity(jd_embedding, bullet_embedding) + \
                 \uc0\u956  \'d7 quality_features_score\
   ```\
3. **Enforce max 1 per project** (default 1)\
4. **Anti-redundancy**: reject if cosine \uc0\u8805  0.85 vs any selected in the same role\
5. **Respect per-role limits**: Select top N bullets per role (from Settings)\
\
#### Algorithm Weights (Hardcoded for MVP)\
\
**Baseline Weights:**\
- \uc0\u945  = 0.80 (relevance to job description)\
- \uc0\u956  = 0.15 (quality features)\
- \uc0\u961  = 0.05 (recency bias)\
- \uc0\u955  = 0.30 (redundancy penalty)\
\
**Quality Features Scoring:**\
- +0.20 for numbers/quantified results\
- +0.10 for strong action verbs\
- +0.05 for appropriate length\
- Cap total quality bonus at 0.35\
\
**Function Bias Adjustments (No Extra API Calls):**\
- **General**: Baseline weights\
- **Technical**: \uc0\u945  +0.05, numbers bonus +0.05 (cap \u956  at 0.20)\
- **Business Strategy**: \uc0\u956  +0.05 (action verbs +0.03), \u955  +0.05 (encourage diversity)\
- **Marketing/PMM**: \uc0\u956  +0.05 (length bonus +0.02), \u945  -0.02 (less keyword chasing)\
- **Operations**: \uc0\u961  +0.05 (mild recency bump), numbers bonus +0.03\
\
### 4. Technical Implementation Details\
\
#### Unassigned Bullets Policy (Non-Negotiable)\
- **Contract**: Every bullet MUST have a `projectId` \
- **Auto-assignment**: Bullets without explicit project assignment get assigned to a per-role "No Project" entity\
- **"No Project" entity**: Created automatically for each role with ID pattern `"no_project_\{roleId\}"`\
- **Ranking participation**: "No Project" participates in project-first ranking and respects "max 1 per project" constraint\
- **UI treatment**: "No Project" appears in project dropdowns and tables like any other project\
\
#### Storage Layer (IndexedDB)\
```javascript\
// Database schema\
const DB_NAME = 'ResuumDB';\
const DB_VERSION = 1;\
const STORES = \{\
  roles: \{ keyPath: 'id' \},\
  projects: \{ keyPath: 'id', indexes: ['roleId'] \},\
  bullets: \{ keyPath: 'id', indexes: ['roleId', 'projectId', 'normalizedFingerprint'] \},\
  embeddings: \{ keyPath: 'bulletId' \},\
  settings: \{ keyPath: 'key' \}\
\};\
\
// Project centroid maintenance (incremental updates)\
class ProjectCentroidManager \{\
  // Store per-project: sumVector (Float32Array) and count\
  addBullet(projectId, bulletVector) \{\
    // sum += bulletVector; count++; centroid = sum/count\
  \}\
  \
  editBullet(projectId, oldVector, newVector) \{\
    // sum += newVector - oldVector; centroid = sum/count  \
  \}\
  \
  deleteBullet(projectId, bulletVector) \{\
    // sum -= bulletVector; count--; centroid = sum/count\
  \}\
  \
  // Debounce centroid updates 200-300ms for batch operations\
\}\
```\
\
#### API Integration\
```javascript\
// OpenAI API wrapper\
class OpenAIService \{\
  async generateEmbedding(text) \{\
    // Call text-embedding-3-small (or user's preferred model)\
    // Cache results in embeddings table\
    // Exponential backoff on rate limits\
  \}\
  \
  async extractJobSkills(jobTitle, jobDescription) \{\
    // Optional: GPT call to extract 10-12 key skills (deep analysis mode)\
  \}\
  \
  async analyzeResults(selectedBullets, jobSkills) \{\
    // Generate coverage and improvement suggestions (deep analysis mode)\
  \}\
  \
  // BYO key with Test and Forget; no logging of prompts or keys; key never exported\
\}\
```\
\
#### Vector Operations (Web Worker)\
```javascript\
// cosine-similarity.worker.js  \
self.onmessage = function(e) \{\
  const \{ jobVector, bulletVectors, selectedVectors \} = e.data;\
  \
  // Cosine similarities\
  const similarities = bulletVectors.map(v => cosineSimilarity(jobVector, v));\
  \
  // MMR + threshold-based redundancy checking\
  const redundancyScores = bulletVectors.map(v => \
    selectedVectors.length > 0 ? \
      Math.max(...selectedVectors.map(s => cosineSimilarity(v, s))) : 0\
  );\
  \
  self.postMessage(\{ similarities, redundancyScores \});\
\};\
```\
\
### 5. User Experience Flows\
\
#### First-Time Setup\
1. **Landing page** explains the tool and BYO API key approach\
2. **API key setup** with connection test and security explanation\
3. **Add first role** with company, title, date range\
4. **Add sample bullet points** (5-10) to see the interface\
5. **Create first application** with test job description\
\
#### Daily Usage Flow\
1. **Open Resuum** (bookmark or desktop shortcut)\
2. **New Application tab**\
3. **Paste job description** and select function bias\
4. **Generate recommendations** (2-3 second processing)\
5. **Review and copy** selected bullet points\
6. **Paste into resume template** and submit application\
\
#### Bullet Point Management\
1. **Experience tab** \uc0\u8594  **Add bullet point**\
2. **Enter text** and **assign to role/project**\
3. **Auto-embedding** generation in background\
4. **Quality features** calculated and displayed\
5. **Repeat** for historical bullet points\
\
---\
\
## Success Metrics\
\
### Primary KPIs\
- **Time to generate recommendations**: < 3 seconds from job description paste to results\
- **User retention**: 70%+ return for second application within 1 week\
- **Bullet point database size**: Average 50+ bullets per active user\
- **Generation frequency**: 3+ job applications per user per week\
\
### Quality Metrics  \
- **Redundancy rate**: <5% semantic overlap between selected bullets (given hard threshold)\
- **User satisfaction**: >4.0/5.0 rating for recommendation quality\
- **Coverage score**: Only shown when deep analysis mode is enabled - percentage of key requirements addressed by selected bullets\
\
### Technical Metrics\
- **API cost per generation**: <$0.05 per job application\
- **Storage efficiency**: <1MB per 100 bullet points\
- **Load time**: <2 seconds for initial app load\
\
---\
\
## Launch Plan\
\
### Phase 1: Core MVP (Week 1-2)\
- \uc0\u9989  IndexedDB schema and basic CRUD operations\
- \uc0\u9989  BYO OpenAI API key flow with Test/Forget functionality\
- \uc0\u9989  Manual bullet point entry and storage\
- \uc0\u9989  Embeddings cache with project centroid maintenance\
- \uc0\u9989  Job description \u8594  results pipeline (project-first algorithm)\
- \uc0\u9989  Copy/Export functionality\
- \uc0\u9989  Web Worker for vector operations\
\
### Phase 2: Smart Features (Week 3-4)  \
- \uc0\u9989  Quality features scoring (local computation)\
- \uc0\u9989  Context-aware anti-redundancy (MMR + adaptive threshold)\
- \uc0\u9989  Per-role bullet limits and project diversity enforcement\
- \uc0\u9989  Projects UI with descriptions and bullet management\
- \uc0\u9989  Export/Import JSON functionality (API key excluded)\
\
### Phase 3: Polish & Testing (Week 5-6)\
- \uc0\u9989  Optional Deep Analysis toggle with collapsible AI Review\
- \uc0\u9989  Function bias presets with predefined weight adjustments  \
- \uc0\u9989  Onboarding flow and help documentation\
- \uc0\u9989  Performance optimization and debounced operations\
- \uc0\u9989  User testing with 5-10 target users\
\
---\
\
## Risk Assessment\
\
### Technical Risks\
- **API rate limits**: OpenAI has usage limits that could affect heavy users\
  - *Mitigation*: Cache embeddings aggressively, implement local rate limiting\
- **Browser storage limits**: IndexedDB has ~50MB typical limits\
  - *Mitigation*: Efficient vector storage, data compression, cleanup tools\
- **CORS issues**: Direct API calls from browser to OpenAI\
  - *Mitigation*: If a model blocks browser calls, we'll add a tiny proxy later. MVP is direct BYO-key calls\
\
### User Experience Risks  \
- **API key complexity**: Non-technical users may struggle with OpenAI account setup\
  - *Mitigation*: 1-minute onboarding with link to create key and cost expectations. BYO only in v1\
- **Data loss**: Browser storage can be cleared accidentally  \
  - *Mitigation*: Prompt to Export after N bullets (e.g., 20). Offer periodic reminder toggle\
- **Overwhelming interface**: Too many options could confuse users\
  - *Mitigation*: Progressive disclosure, smart defaults, minimal viable feature set\
\
### Business Risks\
- **OpenAI dependency**: Single point of failure for core functionality  \
  - *Mitigation*: Abstract AI service layer, plan for alternative models\
- **CORS issues**: Direct API calls from browser to OpenAI\
  - *Mitigation*: If any CORS friction, ship a tiny proxy later; don't introduce it in MVP\
- **Limited market validation**: Unclear if target users will adopt tool\
  - *Mitigation*: Early user interviews, rapid iteration based on feedback\
\
---\
\
## Future Enhancements (Post-MVP)\
\
### Near-term (Months 2-3)\
- **Resume templates**: Generate full resume sections, not just bullet points\
- **ATS optimization**: Keyword density analysis and formatting suggestions  \
- **Batch processing**: Upload multiple job descriptions, get recommendations for all\
- **Browser extension**: Integrate with LinkedIn, job boards for one-click optimization\
\
### Long-term (Months 4-6)\
- **Multi-device sync**: Cloud storage option for users wanting cross-device access\
- **Team features**: Share bullet point libraries within organizations\
- **Advanced analytics**: Track application success rates, A/B test bullet point variants\
- **AI writing assistance**: Suggest improved versions of existing bullet points\
- **Model options**: Become visible post-MVP if proxy or multi-vendor support added\
\
---\
\
## Technical Specifications\
\
### Browser Compatibility\
- **Chrome/Edge**: Full support (primary target)\
- **Firefox**: Full support  \
- **Safari**: Basic support (some IndexedDB limitations)\
- **Mobile browsers**: Read-only support\
\
### Performance Requirements\
- **Initial load**: <2 seconds on broadband connection\
- **Bullet point search**: <100ms for 500 bullets\
- **AI generation**: <5 seconds for typical job description\
- **Storage operations**: <50ms for CRUD operations\
\
### Security Considerations\
- **API key storage**: Your OpenAI API key is stored locally in your browser with user-controlled deletion\
- **Data privacy**: All processing happens locally, no server-side data storage\
- **HTTPS requirement**: Force secure connections for API calls\
\
---\
\
## Appendix\
\
### Sample Data Structures\
\
```javascript\
// Project (updated with centroid)\
\{\
  id: "proj_telecom_transform",\
  roleId: "role_mckinsey_sc",\
  name: "Global Telecom Transformation",\
  description: "Core network & go-to-market workstream",\
  centroidVector: /* ArrayBuffer containing Float32Array */,\
  bulletCount: 7,\
  createdAt: 1715712000000,\
  updatedAt: 1718390400000\
\}\
\
// Bullet (updated with features and fingerprint)\
\{\
  id: "bp_001",\
  roleId: "role_mckinsey_sc",\
  projectId: "proj_telecom_transform",\
  text: "Developed demand forecast model for 5G infrastructure services, achieving 15% improvement in accuracy vs. legacy approach and enabling $2.3M in cost savings",\
  source: "manual",\
  normalizedFingerprint: "developed demand forecast model for <NUM> infrastructure services achieving <NUM> improvement in accuracy vs legacy approach and enabling <NUM> in cost savings",\
  features: \{ hasNumbers: true, actionVerb: true, lengthOk: true \},\
  createdAt: 1715760000000,\
  lastModified: 1715760000000\
\}\
\
// Generation result (updated with project-first approach)\
\{\
  jobTitle: "Strategy & Operations Manager",\
  totalBullets: 12,\
  processingTime: 2.8,\
  projectsConsidered: 8,\
  roleResults: [\
    \{\
      roleTitle: "Senior Consultant",\
      projectsShortlisted: ["Global Telecom", "Healthcare M&A", "Retail Strategy"],\
      selectedBullets: [...],\
      avgRelevance: 0.91\
    \}\
  ],\
  deepAnalysis: \{\
    enabled: false,\
    focusSummary: "Emphasized quantitative analysis, client management, strategic planning"\
    // No covered/missing arrays when deep analysis is disabled\
  \}\
\}\
```}